name: Prod CI/CD

on:
  push:
    branches:
      - 'master'


jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Code
      uses: actions/checkout@v2
    - name: Install NodeJS
      uses: actions/setup-node@v1
      with:
        node-version: 18
    - name: Install Rust Toolchain
      uses: actions-rs/toolchain@v1.0.6
      with:
        toolchain: stable
        override: true
        components: rustfmt, clippy
    - name: Install Webpack Dependencies and Test/Build Frontend
      run: cd client && npm i && npm run install-proto-linux && npm run build-proto && npm test && npm run lint && npm run build-prod && cd ..
    - name: Build Backends
      # TODO - Run:
      #   cargo check --features "adafruit_motorkit"
      #   cargo check --features "adafruit_motorkit liveace"
      #   cargo clippy --features "adafruit_motorkit" -- -D warnings
      #   cargo clippy --features "adafruit_motorkit liveace" -- -D warnings
      run: |
        sudo apt-get update
        sudo apt-get install -y libudev-dev
        rustup update
        cd command_executor_server
        cargo check
        cargo check --features "liveace"
        cargo fmt -- --check
        cargo clippy -- -D warnings
        cargo clippy --features "liveace" -- -D warnings
        cd ..
  deploy:
    needs: test
    runs-on: ubuntu-latest
    environment: production
    steps:
      - uses: actions/checkout@v2

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Build container image
        run: docker build -t registry.digitalocean.com/cards/lightningvend:$(echo $GITHUB_SHA | head -c7) .

      - name: Log in to DigitalOcean Container Registry with short-lived credentials
        run: doctl registry login --expiry-seconds 1200

      - name: Push image to DigitalOcean Container Registry
        run: docker push registry.digitalocean.com/cards/lightningvend:$(echo $GITHUB_SHA | head -c7)

      - name: Update deployment file
        run: TAG=$(echo $GITHUB_SHA | head -c7) && sed -i 's|<IMAGE>|registry.digitalocean.com/cards/lightningvend:'${TAG}'|' $GITHUB_WORKSPACE/deployment.yml

      - name: Save DigitalOcean kubeconfig with short-lived credentials
        run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 cards

      - name: Deploy to DigitalOcean Kubernetes
        run: kubectl apply -f $GITHUB_WORKSPACE/deployment.yml

      - name: Verify deployment
        run: kubectl rollout status deployment/lightningvend
